{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.service.ts","./src/app/attribute/attribute.component.ts","./src/app/attribute/attribute.component.html","./src/app/dropdown/dropdown.directive.ts","./src/app/hasPermission/has-permission.directive.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/hover/hover.directive.ts","./src/app/stateful/components/default-error/default-error.component.ts","./src/app/stateful/components/default-loader/default-loader.component.ts","./src/app/stateful/providers.ts","./src/app/stateful/stateful.directive.ts","./src/app/stateful/stateful.module.ts","./src/app/structural/structural.component.ts","./src/app/structural/structural.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;;AAOnC,MAAM,YAAY;IAEvB;QACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACpB,CAAC;;wEAJU,YAAY;4FAAZ,YAAY;QCPzB,8EACE;QAAA,uEAAiD;QAAA,+DAAI;QAAA,4DAAI;QACzD,uEAA2D;QAAA,+EAAoB;QAAA,4DAAI;QACnF,uEAA4D;QAAA,gFAAqB;QAAA,4DAAI;QACvF,4DAAc;QAEd,2EAA+B;;6FDClB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEM;AACA;AACgC;AAEhC;AACsB;AACG;AACZ;AACC;AACF;AACL;AACC;AACW;AACT;AACA;AACyB;AACZ;;;;AAwC/D,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAzBJ;YACP,uEAAa;YACb,4DAAY;YACZ,4DAAY,CAAC,OAAO,CAAC;gBACnB;oBACE,IAAI,EAAE,EAAE;oBACR,SAAS,EAAE,mEAAa;iBACzB;gBACD;oBACE,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,iFAAkB;iBAC9B;gBACD;oBACE,IAAI,EAAE,YAAY;oBAClB,SAAS,EAAE,oFAAmB;iBAC/B;aACF,CAAC;YACF,wEAAc,CAAC,OAAO,EAAE;YACxB,4FAAuB;YACvB,0EAAgB;YAChB,yEAAe;YACf,qEAAa;YACb,uEAAc;YACd,oFAAoB;SACrB;mIAIU,SAAS,mBApClB,2DAAY;QACZ,iFAAkB;QAClB,oFAAmB;QACnB,mEAAa;QACb,+EAAiB;QACjB,sEAAc;QACd,+FAAsB,aAGtB,uEAAa;QACb,4DAAY,0IAgBZ,4FAAuB;QACvB,0EAAgB;QAChB,yEAAe;QACf,qEAAa;QACb,uEAAc;QACd,oFAAoB;6FAKX,SAAS;cAtCrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,iFAAkB;oBAClB,oFAAmB;oBACnB,mEAAa;oBACb,+EAAiB;oBACjB,sEAAc;oBACd,+FAAsB;iBACvB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,4DAAY;oBACZ,4DAAY,CAAC,OAAO,CAAC;wBACnB;4BACE,IAAI,EAAE,EAAE;4BACR,SAAS,EAAE,mEAAa;yBACzB;wBACD;4BACE,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,iFAAkB;yBAC9B;wBACD;4BACE,IAAI,EAAE,YAAY;4BAClB,SAAS,EAAE,oFAAmB;yBAC/B;qBACF,CAAC;oBACF,wEAAc,CAAC,OAAO,EAAE;oBACxB,4FAAuB;oBACvB,0EAAgB;oBAChB,yEAAe;oBACf,qEAAa;oBACb,uEAAc;oBACd,oFAAoB;iBACrB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC1DD;AAAA;AAAA;AAAA;AAAA;AAA2C;AAK7B;AACuB;;AAK9B,MAAM,UAAU;IAGrB;QAFA,gBAAW,GAAG,IAAI,oDAAe,CAAkB,MAAM,CAAC,CAAC;IAE3C,CAAC;IAEjB,aAAa,CAAC,cAAmD,EAAE;QACjE,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAC1B,0DAAG,CAAC,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAC7F,CAAC;IACJ,CAAC;;oEATU,UAAU;6FAAV,UAAU,WAAV,UAAU,mBAFT,MAAM;6FAEP,UAAU;cAHtB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;AAO3C,MAAM,kBAAkB;IAE7B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;oFALU,kBAAkB;kGAAlB,kBAAkB;QCP/B,8EACE;QAAA,kFACE;QAAA,oEAAyD;QACzD,iFAAgB;QAAA,uEAAY;QAAA,4DAAiB;QAC7C,oFAAmB;QAAA,oEAAS;QAAA,4DAAoB;QAClD,4DAAkB;QAClB,mFACE;QAAA,oEACE;QAAA,4QAGF;QAAA,4DAAI;QACN,4DAAmB;QACnB,oFACE;QAAA,6EAAmB;QAAA,gEAAI;QAAA,4DAAS;QAChC,6EAAmB;QAAA,iEAAK;QAAA,4DAAS;QACnC,4DAAmB;QACrB,4DAAW;QAEX,+EACE;QAAA,mFACE;QAAA,qEAAyD;QACzD,kFAAgB;QAAA,wEAAY;QAAA,4DAAiB;QAC7C,qFAAmB;QAAA,qEAAS;QAAA,4DAAoB;QAClD,4DAAkB;QAClB,oFACE;QAAA,qEACE;QAAA,oFACF;QAAA,4DAAI;QACN,4DAAmB;QACnB,oFACE;QAAA,6EAAmB;QAAA,gEAAI;QAAA,4DAAS;QAChC,6EAAmB;QAAA,iEAAK;QAAA,4DAAS;QACnC,4DAAmB;QACrB,4DAAW;QAEX,0EAEE;QAAA,6EAAuD;QAAA,gEAAI;QAAA,4DAAS;QAEpE,0EACE;QAAA,wEAAkC;QAAA,8DAAE;QAAA,4DAAI;QACxC,wEAAkC;QAAA,8DAAE;QAAA,4DAAI;QACxC,wEAAkC;QAAA,8DAAE;QAAA,4DAAI;QAC1C,4DAAM;QAER,4DAAM;;6FDvCO,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAA+E;;AAKxE,MAAM,iBAAiB;IAE5B,YACU,KAAiB,EACjB,QAAmB;QADnB,UAAK,GAAL,KAAK,CAAY;QACjB,aAAQ,GAAR,QAAQ,CAAW;QAE3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACpB,CAAC;IAGD,cAAc;QACZ,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;QAC1C,MAAM,MAAM,GAAG,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAEnD,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;SAC7C;aAAM;YACL,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;SAC1C;IACH,CAAC;;kFAnBU,iBAAiB;iGAAjB,iBAAiB;yIAAjB,oBAAgB;;6FAAhB,iBAAiB;cAH7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;aAC1B;;kBAUE,0DAAY;mBAAC,OAAO;;;;;;;;;;;;;;ACdvB;AAAA;AAAA;AAAA;AAOuB;;;AAUhB,MAAM,sBAAsB;IAKjC,YACU,GAAqB,EACrB,GAAqB,EACrB,UAAsB;QAFtB,QAAG,GAAH,GAAG,CAAkB;QACrB,QAAG,GAAH,GAAG,CAAkB;QACrB,eAAU,GAAV,UAAU,CAAY;QAE9B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACpB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU;aAChC,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC;aACpC,SAAS,CAAC,aAAa,CAAC,EAAE;YACzB,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;YACjB,IAAI,aAAa,EAAE;gBACjB,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACvC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,WAAW;QACT,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;SACjC;IACH,CAAC;;4FA5BU,sBAAsB;sGAAtB,sBAAsB;6FAAtB,sBAAsB;cAHlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;aAC/B;;kBAEE,mDAAK;;;;;;;;;;;;;;AClBR;AAAA;AAAA;AAAkD;;AAO3C,MAAM,aAAa;IAExB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0EALU,aAAa;6FAAb,aAAa;QCP1B,qEAAI;QAAA,wFAA6B;QAAA,4DAAK;;6FDOzB,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAKuB;;AAKhB,MAAM,cAAc;IAEzB,YACU,KAAiB,EACjB,QAAmB;QADnB,UAAK,GAAL,KAAK,CAAY;QACjB,aAAQ,GAAR,QAAQ,CAAW;IAC1B,CAAC;IAGJ,SAAS;QACP,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;IACrE,CAAC;IAGD,YAAY;QACV,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,SAAS,EAAE,GAAG,CAAC,CAAC;IACnE,CAAC;;4EAfU,cAAc;8FAAd,cAAc;gJAAd,eAAW,oFAAX,kBAAc;;6FAAd,cAAc;cAH1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;aACvB;;kBAQE,0DAAY;mBAAC,YAAY;;kBAKzB,0DAAY;mBAAC,YAAY;;;;;;;;;;;;;;ACtB5B;AAAA;AAAA;AAA2E;;AASpE,MAAM,qBAAqB;IAEhC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0FALU,qBAAqB;qGAArB,qBAAqB;QALrB,gEAAK;;6FAKL,qBAAqB;cAPjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,wBAAwB;gBAClC,QAAQ,EAAE,OAAO;gBACjB,MAAM,EAAE,EACP;gBACD,eAAe,EAAE,qEAAuB,CAAC,MAAM;aAChD;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAA2E;;AAWpE,MAAM,sBAAsB;IAEjC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;4FALU,sBAAsB;sGAAtB,sBAAsB;QAN/B,uEACF;;6FAKW,sBAAsB;cATlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,yBAAyB;gBACnC,QAAQ,EAAE;;GAET;gBACD,MAAM,EAAE,EACP;gBACD,eAAe,EAAE,qEAAuB,CAAC,MAAM;aAChD;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAIuB;AAOhB,MAAM,sBAAsB,GAAG,IAAI,4DAAc,CAAiB,wBAAwB,CAAC,CAAC;;;;;;;;;;;;;ACXnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUuB;AAKF;AACyE;AACH;;AAE3F;;;;;;;;;;;;;;;;GAgBG;AAII,MAAM,eAAe;IAO1B,YACU,SAAmC,EACnC,cAAgC,EAChC,YAAuD,EACvB,MAAsB;QAHtD,cAAS,GAAT,SAAS,CAA0B;QACnC,mBAAc,GAAd,cAAc,CAAkB;QAChC,iBAAY,GAAZ,YAAY,CAA2C;QACvB,WAAM,GAAN,MAAM,CAAgB;QAVxD,aAAQ,GAAiC,IAAI,sBAAsB,EAAQ,CAAC;QAC5E,0BAAqB,GAAqD,IAAI,CAAC;QAC/E,yBAAoB,GAAqD,IAAI,CAAC;QAC9E,WAAM,GAA6E,IAAI,CAAC,CAAC,OAAO;QAChG,YAAO,GAA6E,IAAI,CAAC,CAAC,OAAO;IAOtG,CAAC;IAEJ;;OAEG;IACH,IACI,eAAe,CAAC,WAA8B;QAChD,WAAW,CAAC,WAAW,CAAC,CAAC;QACzB,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,WAAW,CAAC;QACtC,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,WAAW,CAAC,SAAS,CAAC;QAChD,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC;QACxC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC;QAC1C,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED;;OAEG;IACH,IACI,wBAAwB,CAAC,WAA6D;QACxF,cAAc,CAAC,0BAA0B,EAAE,WAAW,CAAC,CAAC;QACxD,IAAI,CAAC,qBAAqB,GAAG,WAAW,CAAC;QACzC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,CAAE,8BAA8B;QACpD,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED;;OAEG;IACH,IACI,uBAAuB,CAAC,WAA6D;QACvF,cAAc,CAAC,yBAAyB,EAAE,WAAW,CAAC,CAAC;QACvD,IAAI,CAAC,oBAAoB,GAAG,WAAW,CAAC;QACxC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,CAAE,8BAA8B;QACnD,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAEO,WAAW;QACjB,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,SAAS,EAAE;YACrC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACjB,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;gBAC5B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBAEnB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,qBAAqB;oBACvC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,QAAQ,CAAC;oBACnF,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,eAAe,CACnC,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,IAAI,0GAA6B,CAAC,CAAC,cAAc;qBACpH,CAAC;aACL;SACF;aAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,EAAE;YACxC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBAChB,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;gBAC5B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBAEpB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,oBAAoB;oBACrC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,QAAQ,CAAC;oBAClF,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,eAAe,CACnC,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI,uGAA4B,CAAC,CAAC,cAAc;qBAClH,CAAC;aACL;SACF;aAAM;YACL,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;YAC5B,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC1E;IACH,CAAC;;8EA9EU,eAAe,wcAWhB,iEAAsB;+FAXrB,eAAe;6FAAf,eAAe;cAH3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;aAC9B;;sBAYI,oDAAM;uBAAC,iEAAsB;;kBAM/B,mDAAK;;kBAaL,mDAAK;;kBAWL,mDAAK;;AAwCR;;GAEG;AACI,MAAM,sBAAsB;IAAnC;QACS,cAAS,GAAsB,IAAI,CAAC;QACpC,cAAS,GAAY,IAAI,CAAC;QAC1B,UAAK,GAAM,IAAI,CAAC;QAChB,WAAM,GAAM,IAAI,CAAC;IAC1B,CAAC;CAAA;AAED,SAAS,WAAW,CAAC,WAAwB;IAC3C,MAAM,aAAa,GAAG,OAAO,WAAW,KAAK,QAAQ;WAChD,WAAW,CAAC,SAAS,KAAK,SAAS;WACnC,WAAW,CAAC,KAAK,KAAK,SAAS;WAC/B,WAAW,CAAC,MAAM,KAAK,SAAS,CAAC;IAEtC,IAAI,CAAC,aAAa,EAAE;QAClB,MAAM,IAAI,KAAK,CAAC;mBACD,gEAAS,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;KAC3C;AACH,CAAC;AAED,SAAS,cAAc,CAAC,QAAgB,EAAE,WAAoC;IAC5E,MAAM,mBAAmB,GAAG,CAAC,CAAC,CAAC,CAAC,WAAW,IAAI,WAAW,CAAC,kBAAkB,CAAC,CAAC;IAC/E,IAAI,CAAC,mBAAmB,EAAE;QACxB,MAAM,IAAI,KAAK,CAAC,GAAG,QAAQ,yCAAyC,gEAAS,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;KACjG;AACH,CAAC;;;;;;;;;;;;;ACnJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGuB;AACgC;AAIlC;AACyE;AACH;;AAYpF,MAAM,cAAc;IACzB,MAAM,CAAC,OAAO,CAAC,SAAyB,EAAE;QACxC,OAAO;YACL,QAAQ,EAAE,cAAc;YACxB,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,iEAAsB;oBAC/B,QAAQ,EAAE,MAAM;iBACjB;aACF;SACF,CAAC;IACJ,CAAC;;6FAXU,cAAc;sJAAd,cAAc,kBARhB,EACR;mIAOU,cAAc,mBATV,mEAAe,EAAE,0GAAsB,EAAE,uGAAqB,aAGnE,mEAAe;6FAMd,cAAc;cAV1B,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,mEAAe,EAAE,0GAAsB,EAAE,uGAAqB,CAAC;gBAC9E,OAAO,EAAE,EACR;gBACD,OAAO,EAAE,CAAC,mEAAe,CAAC;gBAC1B,eAAe,EAAE;oBACf,0GAAsB;oBACtB,uGAAqB;iBACtB;aACF;;;;;;;;;;;;;;ACrBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAKpC;AAQU;;;;;;;;;;ICVxB,8EACE;IAAA,kFACE;IAAA,oEAAyD;IACzD,iFAAgB;IAAA,uEAAY;IAAA,4DAAiB;IAC7C,oFAAmB;IAAA,oEAAS;IAAA,4DAAoB;IAClD,4DAAkB;IAClB,mFACE;IAAA,oEACE;IAAA,sEACF;IAAA,4DAAI;IACN,4DAAmB;IACnB,oFACE;IAAA,6EAAmB;IAAA,gEAAI;IAAA,4DAAS;IAChC,6EAAmB;IAAA,iEAAK;IAAA,4DAAS;IACnC,4DAAmB;IACrB,4DAAW;;;IAEX,8EACE;IAAA,kFACE;IAAA,oEAAyD;IACzD,iFAAgB;IAAA,uEAAY;IAAA,4DAAiB;IAC7C,oFAAmB;IAAA,oEAAS;IAAA,4DAAoB;IAClD,4DAAkB;IAClB,mFACE;IAAA,oEACE;IAAA,2EACF;IAAA,4DAAI;IACN,4DAAmB;IACnB,oFACE;IAAA,6EAAmB;IAAA,gEAAI;IAAA,4DAAS;IAChC,6EAAmB;IAAA,iEAAK;IAAA,4DAAS;IACnC,4DAAmB;IACrB,4DAAW;;;IAWT,mFACE;IAAA,oEACE;IAAA,4QAGF;IAAA,4DAAI;IACN,4DAAmB;;;IASjB,oEAAuG;;;IAIzG,mFACE;IAAA,oEACE;IAAA,mFACF;IAAA,4DAAI;IACN,4DAAmB;;;IAanB,mFACE;IAAA,oEACE;IAAA,8JACF;IAAA,4DAAI;IACN,4DAAmB;;;IAQnB,yFACF;;;IAGE,oEACF;;;AD5EO,MAAM,mBAAmB;IAQ9B,YACU,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QARhC,iBAAY,GAAgB,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QAC5E,eAAU,GAAgB,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,gBAAgB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QACnG,iBAAY,GAA4B,+CAAE,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC,IAAI,CAChH,4DAAK,CAAC,IAAI,CAAC,EACX,gEAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAC7B,CAAC;IAIE,CAAC;IAEL,QAAQ;IACR,CAAC;IAED,gBAAgB,CAAC,EAAE,OAAO,EAAwB;QAChD,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;IAC/D,CAAC;;sFAjBU,mBAAmB;mGAAnB,mBAAmB;QCvBhC,qEAAI;QAAA,0EAAe;QAAA,4DAAK;QACxB,sFAAyE;QAAvD,6JAAU,4BAAwB,IAAC;QAAC,4DAAmB;QAEzE,0HACE;QAgBF,0HACE;QAkBF,qEAAI;QAAA,mEAAQ;QAAA,4DAAK;QACjB,8EACE;QAAA,kFACE;QAAA,oEAAyD;QACzD,kFAAgB;QAAA,wEAAY;QAAA,4DAAiB;QAC7C,qFAAmB;QAAA,qEAAS;QAAA,4DAAoB;QAClD,4DAAkB;QAClB,2IACE;QAMF,oFACE;QAAA,6EAAmB;QAAA,gEAAI;QAAA,4DAAS;QAChC,6EAAmB;QAAA,iEAAK;QAAA,4DAAS;QACnC,4DAAmB;QACrB,4DAAW;QAEX,+EACE;QAAA,mFACE;QAAA,iHAAiG;QACjG,kFAAgB;QAAA,wEAAY;QAAA,4DAAiB;QAC7C,qFAAmB;QAAA,qEAAS;QAAA,4DAAoB;QAClD,4DAAkB;QAClB,2IACE;QAIF,oFACE;QAAA,6EAAmB;QAAA,gEAAI;QAAA,4DAAS;QAChC,6EAAmB;QAAA,iEAAK;QAAA,4DAAS;QACnC,4DAAmB;QACrB,4DAAW;QAEX,+EACE;QAAA,mFACE;QAAA,qEAAyD;QACzD,kFAAgB;QAAA,wEAAY;QAAA,4DAAiB;QAC7C,qFAAmB;QAAA,qEAAS;QAAA,4DAAoB;QAClD,4DAAkB;QAClB,2IACE;;QAIF,oFACE;QAAA,6EAAmB;QAAA,gEAAI;QAAA,4DAAS;QAChC,6EAAmB;QAAA,iEAAK;QAAA,4DAAS;QACnC,4DAAmB;QACrB,4DAAW;QAEX,6MACE;QAGF,8MACE;;;;QA/F6B,0DAA2B;QAA3B,qFAA2B;QAiB3B,0DAAqC;QAArC,oJAAqC;QA0BhD,2DAAiD;QAAjD,6FAAiD;QAed,0DAA6C;QAA7C,2FAA6C;QAIhF,0DAA6B;QAA7B,2FAA6B;QAiB7B,2DAAuC;QAAvC,+JAAuC;;6FD3D9C,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AEtBD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  constructor() {\n    console.log(this);\n  }\n\n}\n","<mat-toolbar>\n  <a mat-flat-button color=\"accent\" routerLink=\"/\">Home</a>\n  <a mat-flat-button color=\"primary\" routerLink=\"/attribute\">Attribute Directives</a>\n  <a mat-flat-button color=\"primary\" routerLink=\"/structural\">Structural Directives</a>\n</mat-toolbar>\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { AttributeComponent } from './attribute/attribute.component';\nimport { StructuralComponent } from './structural/structural.component';\nimport { StatefulModule } from './stateful/stateful.module';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { HomeComponent } from './home/home.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { DropdownDirective } from './dropdown/dropdown.directive';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { HoverDirective } from './hover/hover.directive';\nimport { HasPermissionDirective } from './hasPermission/has-permission.directive';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AttributeComponent,\n    StructuralComponent,\n    HomeComponent,\n    DropdownDirective,\n    HoverDirective,\n    HasPermissionDirective,\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    RouterModule.forRoot([\n      {\n        path: '',\n        component: HomeComponent,\n      },\n      {\n        path: 'attribute',\n        component: AttributeComponent,\n      },\n      {\n        path: 'structural',\n        component: StructuralComponent,\n      },\n    ]),\n    StatefulModule.forRoot(),\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatCardModule,\n    MatChipsModule,\n    MatSlideToggleModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {\n  BehaviorSubject,\n  Observable,\n  of\n} from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppService {\n  $permission = new BehaviorSubject<AuthPermissions>('user');\n\n  constructor() { }\n\n  hasPermission(permissions: AuthPermissions | AuthPermissions[] = []): Observable<boolean> {\n    return this.$permission.pipe(\n      map((permission) => (permissions.concat ? permissions : [permissions]).includes(permission)),\n    );\n  }\n}\n\nexport type AuthPermissions = 'admin' | 'user' | 'incognito';\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-attribute',\n  templateUrl: './attribute.component.html',\n  styleUrls: ['./attribute.component.css']\n})\nexport class AttributeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card appHover class=\"example-card\">\n  <mat-card-header>\n    <div mat-card-avatar class=\"example-header-image1\"></div>\n    <mat-card-title>Shiba Inu #1</mat-card-title>\n    <mat-card-subtitle>Dog Breed</mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content>\n    <p>\n      The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n      A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n      bred for hunting.\n    </p>\n  </mat-card-content>\n  <mat-card-actions>\n    <button mat-button>LIKE</button>\n    <button mat-button>SHARE</button>\n  </mat-card-actions>\n</mat-card>\n\n<mat-card class=\"example-card\">\n  <mat-card-header>\n    <div mat-card-avatar class=\"example-header-image2\"></div>\n    <mat-card-title>Shiba Inu #2</mat-card-title>\n    <mat-card-subtitle>Dog Breed</mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content>\n    <p>\n      Some other description\n    </p>\n  </mat-card-content>\n  <mat-card-actions>\n    <button mat-button>LIKE</button>\n    <button mat-button>SHARE</button>\n  </mat-card-actions>\n</mat-card>\n\n<div class=\"wrapper\">\n\n  <button appDropdown class=\"dropdown-btn\" type=\"button\">Menu</button>\n\n  <div class=\"dropdown\">\n    <a href=\"#\" class=\"dropdown-item\">#1</a>\n    <a href=\"#\" class=\"dropdown-item\">#2</a>\n    <a href=\"#\" class=\"dropdown-item\">#3</a>\n  </div>\n\n</div>\n","import { Directive, HostListener, ElementRef, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[appDropdown]'\n})\nexport class DropdownDirective {\n\n  constructor(\n    private elRef: ElementRef,\n    private renderer: Renderer2\n  ) {\n    console.log(this);\n  }\n\n  @HostListener('click')\n  toggleDropdown(): void {\n    const buttonEl = this.elRef.nativeElement;\n    const isOpen = buttonEl.classList.contains('open');\n\n    if (isOpen) {\n      this.renderer.removeClass(buttonEl, 'open');\n    } else {\n      this.renderer.addClass(buttonEl, 'open');\n    }\n  }\n\n}\n","import {\n  Directive,\n  Input,\n  OnDestroy,\n  OnInit,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport {\n  AppService,\n  AuthPermissions\n} from '../app.service';\n\n@Directive({\n  selector: '[appHasPermission]'\n})\nexport class HasPermissionDirective implements OnInit, OnDestroy {\n  @Input() appHasPermission: AuthPermissions | AuthPermissions[];\n\n  private subscription: Subscription;\n\n  constructor(\n    private vcr: ViewContainerRef,\n    private tpl: TemplateRef<any>,\n    private appService: AppService,\n  ) {\n    console.log(this);\n  }\n\n  ngOnInit(): void {\n    this.subscription = this.appService\n      .hasPermission(this.appHasPermission)\n      .subscribe(hasPermission => {\n        this.vcr.clear();\n        if (hasPermission) {\n          this.vcr.createEmbeddedView(this.tpl);\n        }\n      });\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>Angular Directives Playground</h1>\n","import {\n  Directive,\n  ElementRef,\n  HostListener,\n  Renderer2\n} from '@angular/core';\n\n@Directive({\n  selector: '[appHover]'\n})\nexport class HoverDirective {\n\n  constructor(\n    private elRef: ElementRef,\n    private renderer: Renderer2\n  ) {}\n\n  @HostListener('mouseenter')\n  addStyles(): void {\n    this.renderer.setStyle(this.elRef.nativeElement, 'opacity', '0.5');\n  }\n\n  @HostListener('mouseleave')\n  removeStyles(): void {\n    this.renderer.setStyle(this.elRef.nativeElement, 'opacity', '1');\n  }\n}\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'ng-utils-default-error',\n  template: `Error`,\n  styles: [\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DefaultErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'ng-utils-default-loader',\n  template: `\n    Loading...\n  `,\n  styles: [\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DefaultLoaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import {\n  Component,\n  InjectionToken,\n  Type,\n} from '@angular/core';\n\nexport type StatefulConfig = {\n  loaderComponent?: Type<Component>;\n  errorComponent?: Type<Component>;\n};\n\nexport const StatefulConfigProvider = new InjectionToken<StatefulConfig>('StatefulConfigProvider');\n","import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  EmbeddedViewRef,\n  Inject,\n  Input,\n  TemplateRef,\n  ViewContainerRef,\n  ɵstringify as stringify,\n} from '@angular/core';\nimport { ResultState } from './stateful';\nimport {\n  StatefulConfig,\n  StatefulConfigProvider\n} from './providers';\nimport { DefaultLoaderComponent } from './components/default-loader/default-loader.component';\nimport { DefaultErrorComponent } from './components/default-error/default-error.component';\n\n/**\n * A structural directive that renders template depending on result state: isLoading / error / result\n * When isLoading - loaderTpl or provided Loader component is used\n * When error - errorTpl or provided Error component is used\n * Else(when result) - templateRef if rendered\n *\n * @usage\n * Different ways to use directive: {resultState} is object of type ResultState<R, E>\n * `*ngUtilsStateful=\"{resultState}\"`, is generally used\n * `*ngUtilsStateful=\"{resultStateAsync} | async as resultState\"`, is generally used\n * `*ngUtilsStateful=\"{resultStateAsync} | async; let resultStateOrAnyName\"`, implicit ResultState\n * `*ngUtilsStateful=\"{resultState}; loaderTpl loader\"; errorTpl error`, to use with templateRefs\n * `*ngUtilsStateful=\"{resultState}; result as resultValue; isLoading as isLoadingValue; error as errorValue\"`, for direct access\n *\n * @ngModule StatefulModule\n * @publicApi\n */\n@Directive({\n  selector: '[ngUtilsStateful]'\n})\nexport class NgUtilsStateful<R = unknown, E = unknown> { // todo: check typings; works like this\n  private _context: NgUtilsStatefulContext<R, E> = new NgUtilsStatefulContext<R, E>();\n  private _loaderTplTemplateRef: TemplateRef<NgUtilsStatefulContext<R, E>> | null = null;\n  private _errorTplTemplateRef: TemplateRef<NgUtilsStatefulContext<R, E>> | null = null;\n  private _error: EmbeddedViewRef<NgUtilsStatefulContext<R, E>> | ComponentRef<any> | null = null; // todo\n  private _loader: EmbeddedViewRef<NgUtilsStatefulContext<R, E>> | ComponentRef<any> | null = null; // todo\n\n  constructor(\n    private _resolver: ComponentFactoryResolver,\n    private _viewContainer: ViewContainerRef,\n    private _templateRef: TemplateRef<NgUtilsStatefulContext<R, E>>,\n    @Inject(StatefulConfigProvider) private config: StatefulConfig,\n  ) {}\n\n  /**\n   * The expression to evaluate what state is \"current\".\n   */\n  @Input()\n  set ngUtilsStateful(resultState: ResultState<R, E>) {\n    assertInput(resultState);\n    this._context.$implicit = resultState;\n    this._context.isLoading = resultState.isLoading;\n    this._context.error = resultState.error;\n    this._context.result = resultState.result;\n    this._updateView();\n  }\n\n  /**\n   * A loader template\n   */\n  @Input()\n  set ngUtilsStatefulLoaderTpl(templateRef: TemplateRef<NgUtilsStatefulContext<R, E>> | null) {\n    assertTemplate('ngUtilsStatefulLoaderTpl', templateRef);\n    this._loaderTplTemplateRef = templateRef;\n    this._loader = null;  // clear previous view if any.\n    this._updateView();\n  }\n\n  /**\n   * An error template\n   */\n  @Input()\n  set ngUtilsStatefulErrorTpl(templateRef: TemplateRef<NgUtilsStatefulContext<R, E>> | null) {\n    assertTemplate('ngUtilsStatefulErrorTpl', templateRef);\n    this._errorTplTemplateRef = templateRef;\n    this._error = null;  // clear previous view if any.\n    this._updateView();\n  }\n\n  private _updateView() {\n    if (this._context.$implicit.isLoading) {\n      if (!this._loader) {\n        this._viewContainer.clear();\n        this._error = null;\n\n        this._loader = this._loaderTplTemplateRef\n          ? this._viewContainer.createEmbeddedView(this._loaderTplTemplateRef, this._context)\n          : this._viewContainer.createComponent(\n            this._resolver.resolveComponentFactory(this.config.loaderComponent || DefaultLoaderComponent as any) // todo: check\n          );\n      }\n    } else if (this._context.$implicit.error) {\n      if (!this._error) {\n        this._viewContainer.clear();\n        this._loader = null;\n\n        this._error = this._errorTplTemplateRef\n          ? this._viewContainer.createEmbeddedView(this._errorTplTemplateRef, this._context)\n          : this._viewContainer.createComponent(\n            this._resolver.resolveComponentFactory(this.config.errorComponent || DefaultErrorComponent as any) // todo: check\n          );\n      }\n    } else {\n      this._loader = null;\n      this._error = null;\n      this._viewContainer.clear();\n      this._viewContainer.createEmbeddedView(this._templateRef, this._context);\n    }\n  }\n}\n\n/**\n * @publicApi\n */\nexport class NgUtilsStatefulContext<R = unknown, E = unknown> implements ResultState<R, E> {\n  public $implicit: ResultState<R, E> = null;\n  public isLoading: boolean = null;\n  public error: E = null;\n  public result: R = null;\n}\n\nfunction assertInput(resultState: ResultState): void {\n  const isResultState = typeof resultState === 'object'\n    && resultState.isLoading !== undefined\n    && resultState.error !== undefined\n    && resultState.result !== undefined;\n\n  if (!isResultState) {\n    throw new Error(`Input must be a ResultState(isLoader/error/result should not be 'undefined'('null' is allowed)),\n    but received ${stringify(resultState)}.`);\n  }\n}\n\nfunction assertTemplate(property: string, templateRef: TemplateRef<any> | null): void {\n  const isTemplateRefOrNull = !!(!templateRef || templateRef.createEmbeddedView);\n  if (!isTemplateRefOrNull) {\n    throw new Error(`${property} must be a TemplateRef, but received '${stringify(templateRef)}'.`);\n  }\n}\n","import {\n  ModuleWithProviders,\n  NgModule\n} from '@angular/core';\nimport { NgUtilsStateful } from './stateful.directive';\nimport {\n  StatefulConfig,\n  StatefulConfigProvider\n} from './providers';\nimport { DefaultLoaderComponent } from './components/default-loader/default-loader.component';\nimport { DefaultErrorComponent } from './components/default-error/default-error.component';\n\n@NgModule({\n  declarations: [NgUtilsStateful, DefaultLoaderComponent, DefaultErrorComponent],\n  imports: [\n  ],\n  exports: [NgUtilsStateful],\n  entryComponents: [\n    DefaultLoaderComponent,\n    DefaultErrorComponent,\n  ],\n})\nexport class StatefulModule {\n  static forRoot(config: StatefulConfig = {}): ModuleWithProviders<StatefulModule> {\n    return {\n      ngModule: StatefulModule,\n      providers: [\n        {\n          provide: StatefulConfigProvider,\n          useValue: config\n        },\n      ]\n    };\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ResultState } from '../stateful/stateful';\nimport {\n  Observable,\n  of\n} from 'rxjs';\nimport {\n  defaultIfEmpty,\n  delay,\n  mapTo,\n  startWith,\n  switchMap,\n  switchMapTo\n} from 'rxjs/operators';\nimport { MatSliderChange } from '@angular/material/slider';\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\nimport { AppService } from '../app.service';\n\n@Component({\n  selector: 'app-structural',\n  templateUrl: './structural.component.html',\n  styleUrls: ['./structural.component.css']\n})\nexport class StructuralComponent implements OnInit {\n  loadingState: ResultState = { isLoading: true, error: false, result: null };\n  errorState: ResultState = { isLoading: false, error: { message: 'Error happened' }, result: null };\n  resultState$: Observable<ResultState> = of({ isLoading: false, error: false, result: { message: 'Result' } }).pipe(\n    delay(5000),\n    startWith(this.loadingState),\n  );\n\n  constructor(\n    private appService: AppService,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  changePermission({ checked }: MatSlideToggleChange): void {\n    this.appService.$permission.next(checked ? 'admin' : 'user');\n  }\n\n}\n","<h1>Has Permissions</h1>\n<mat-slide-toggle (change)=\"changePermission($event)\"></mat-slide-toggle>\n\n<mat-card class=\"example-card\" *appHasPermission=\"'admin'\">\n  <mat-card-header>\n    <div mat-card-avatar class=\"example-header-image2\"></div>\n    <mat-card-title>Shiba Inu #2</mat-card-title>\n    <mat-card-subtitle>Dog Breed</mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content>\n    <p>\n      For Admin\n    </p>\n  </mat-card-content>\n  <mat-card-actions>\n    <button mat-button>LIKE</button>\n    <button mat-button>SHARE</button>\n  </mat-card-actions>\n</mat-card>\n\n<mat-card class=\"example-card\" *appHasPermission=\"['admin', 'user']\">\n  <mat-card-header>\n    <div mat-card-avatar class=\"example-header-image2\"></div>\n    <mat-card-title>Shiba Inu #2</mat-card-title>\n    <mat-card-subtitle>Dog Breed</mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content>\n    <p>\n      Admins + Users\n    </p>\n  </mat-card-content>\n  <mat-card-actions>\n    <button mat-button>LIKE</button>\n    <button mat-button>SHARE</button>\n  </mat-card-actions>\n</mat-card>\n\n\n\n<h1>Stateful</h1>\n<mat-card class=\"example-card\">\n  <mat-card-header>\n    <div mat-card-avatar class=\"example-header-image1\"></div>\n    <mat-card-title>Shiba Inu #1</mat-card-title>\n    <mat-card-subtitle>Dog Breed</mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content *ngUtilsStateful=\"loadingState; loaderTpl loader\">\n    <p>\n      The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n      A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n      bred for hunting.\n    </p>\n  </mat-card-content>\n  <mat-card-actions>\n    <button mat-button>LIKE</button>\n    <button mat-button>SHARE</button>\n  </mat-card-actions>\n</mat-card>\n\n<mat-card class=\"example-card\">\n  <mat-card-header>\n    <div mat-card-avatar class=\"example-header-image2\" *ngUtilsStateful=\"errorState; errorTpl error\"></div>\n    <mat-card-title>Shiba Inu #2</mat-card-title>\n    <mat-card-subtitle>Dog Breed</mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content *ngUtilsStateful=\"errorState\">\n    <p>\n      Some other description\n    </p>\n  </mat-card-content>\n  <mat-card-actions>\n    <button mat-button>LIKE</button>\n    <button mat-button>SHARE</button>\n  </mat-card-actions>\n</mat-card>\n\n<mat-card class=\"example-card\">\n  <mat-card-header>\n    <div mat-card-avatar class=\"example-header-image2\"></div>\n    <mat-card-title>Shiba Inu #2</mat-card-title>\n    <mat-card-subtitle>Dog Breed</mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content *ngUtilsStateful=\"resultState$ | async\">\n    <p>\n      Some other long long long long long long long long long long long long long long long description\n    </p>\n  </mat-card-content>\n  <mat-card-actions>\n    <button mat-button>LIKE</button>\n    <button mat-button>SHARE</button>\n  </mat-card-actions>\n</mat-card>\n\n<ng-template #loader>\n  Template ref loader is used\n</ng-template>\n\n<ng-template #error>\n  Failed\n</ng-template>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}